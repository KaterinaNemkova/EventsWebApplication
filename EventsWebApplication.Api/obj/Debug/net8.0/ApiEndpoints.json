[
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.EventsController",
    "Method": "GetEvents",
    "RelativePath": "api/Events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventsWebApplication.Core.Contracts.EventsResponse, EventsWebApplication.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.EventsController",
    "Method": "GetById",
    "RelativePath": "api/Events/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventsWebApplication.Core.Contracts.EventsResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.EventsController",
    "Method": "UpdateEvent",
    "RelativePath": "api/Events/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventsWebApplication.Core.Contracts.EventsRequest",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.EventsController",
    "Method": "DeleteEvent",
    "RelativePath": "api/Events/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "id",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.EventsController",
    "Method": "GetByName",
    "RelativePath": "api/Events/{title}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "title",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventsWebApplication.Core.Contracts.EventsResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.EventsController",
    "Method": "CreateEvent",
    "RelativePath": "api/Events/create-event",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventsWebApplication.Core.Contracts.EventsRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventsWebApplication.Core.Contracts.EventsResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.EventsController",
    "Method": "GetByFilter",
    "RelativePath": "api/Events/filter",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "place",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "eventsCategory",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventsWebApplication.Core.Contracts.EventsResponse, EventsWebApplication.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.EventsController",
    "Method": "UploadImage",
    "RelativePath": "api/Events/upload-image/{eventId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.MemberController",
    "Method": "AddToEvent",
    "RelativePath": "api/Member/{eventId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "EventsWebApplication.Core.Contracts.MemberRegistrationRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.MemberController",
    "Method": "DeleteMemberFromEvent",
    "RelativePath": "api/Member/{eventId}/{memberId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "memberId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.MemberController",
    "Method": "GetByEvent",
    "RelativePath": "api/Member/GetByEvent{eventId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventsWebApplication.Core.Contracts.MembersResponse, EventsWebApplication.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.MemberController",
    "Method": "GetById",
    "RelativePath": "api/Member/GetById{memberId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "memberId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventsWebApplication.Core.Contracts.MembersResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.UserController",
    "Method": "Login",
    "RelativePath": "User/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventsWebApplication.Core.Contracts.LoginUserRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventsWebApplication.Api.Controllers.UserController",
    "Method": "Register",
    "RelativePath": "User/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventsWebApplication.Core.Contracts.RegisterUserRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]